services:
  zookeeper:
    image: zookeeper:3.8
    container_name: druid-zookeeper
    environment:
      ZOO_4LW_COMMANDS_WHITELIST: ruok,stat,mntr,conf
      ZOO_STANDALONE_ENABLED: "true"
      ZOO_AUTOPURGE_PURGEINTERVAL: "1"
    ports:
      - "2181:2181"

  metadata-storage:
    image: postgres:15
    container_name: druid-metadata
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-druid}
      POSTGRES_USER: ${POSTGRES_USER:-druid}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-druid}
    ports:
      - "5432:5432"
    volumes:
      - metadata-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-druid} -d ${POSTGRES_DB:-druid}"]
      interval: 5s
      timeout: 5s
      retries: 12

  coordinator:
    image: apache/druid:29.0.0
    container_name: druid-coordinator
    command: ["coordinator"]
    env_file:
      - .env
    environment:
      DRUID_CONFIG_coordinator: /opt/druid/conf/druid/cluster/master/coordinator/runtime.properties
      DRUID_SET_HOST: "0"
      DRUID_OVERRIDES: /opt/druid/overrides/*
      druid_host: coordinator
      PATH: "/tmp/async-profiler/bin:${PATH}"
    volumes:
      - ./druid-runtime/conf/druid:/opt/druid/conf/druid:ro
      - ./druid-runtime/logs:/opt/druid/log
      - ./druid-runtime/overrides:/opt/druid/overrides:ro
      - ./druid-override.sh:/druid.sh:ro
      - ./druid-runtime/storage:/opt/druid/var/druid
      - ./tools/async-profiler:/tmp/async-profiler:ro
    cap_add:
      - SYS_ADMIN
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    ports:
      - "8081:8081"
    depends_on:
      - metadata-storage
      - zookeeper

  overlord:
    image: apache/druid:29.0.0
    container_name: druid-overlord
    command: ["overlord"]
    env_file:
      - .env
    environment:
      DRUID_CONFIG_overlord: /opt/druid/conf/druid/cluster/master/overlord/runtime.properties
      DRUID_SET_HOST: "0"
      DRUID_OVERRIDES: /opt/druid/overrides/*
      druid_host: overlord
      PATH: "/tmp/async-profiler/bin:${PATH}"
    volumes:
      - ./druid-runtime/conf/druid:/opt/druid/conf/druid:ro
      - ./druid-runtime/logs:/opt/druid/log
      - ./druid-runtime/overrides:/opt/druid/overrides:ro
      - ./druid-override.sh:/druid.sh:ro
      - ./druid-runtime/storage:/opt/druid/var/druid
      - ./tools/async-profiler:/tmp/async-profiler:ro
    cap_add:
      - SYS_ADMIN
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    ports:
      - "8090:8090"
    depends_on:
      - metadata-storage
      - zookeeper

  router:
    image: apache/druid:29.0.0
    container_name: druid-router
    command: ["router"]
    env_file:
      - .env
    environment:
      DRUID_CONFIG_router: /opt/druid/conf/druid/cluster/query/router/runtime.properties
      DRUID_SET_HOST: "0"
      DRUID_OVERRIDES: /opt/druid/overrides/*
      druid_host: router
      PATH: "/tmp/async-profiler/bin:${PATH}"
    volumes:
      - ./druid-runtime/conf/druid:/opt/druid/conf/druid:ro
      - ./druid-runtime/logs:/opt/druid/log
      - ./druid-runtime/overrides:/opt/druid/overrides:ro
      - ./druid-override.sh:/druid.sh:ro
      - ./druid-runtime/storage:/opt/druid/var/druid
      - ./tools/async-profiler:/tmp/async-profiler:ro
    cap_add:
      - SYS_ADMIN
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    ports:
      - "8888:8888"
    depends_on:
      - broker
      - coordinator
      - overlord

  broker:
    image: apache/druid:29.0.0
    container_name: druid-broker
    command: ["broker"]
    env_file:
      - .env
    environment:
      DRUID_SET_HOST: "0"
      DRUID_OVERRIDES: /opt/druid/overrides/*
      druid_host: broker
      PATH: "/tmp/async-profiler/bin:${PATH}"
    volumes:
      - ./druid-runtime/conf/druid:/opt/druid/conf/druid:ro
      - ./druid-runtime/logs:/opt/druid/log
      - ./druid-runtime/overrides:/opt/druid/overrides:ro
      - ./druid-override.sh:/druid.sh:ro
      - ./druid-runtime/storage:/opt/druid/var/druid
      - ./tools/async-profiler:/tmp/async-profiler:ro
    cap_add:
      - SYS_ADMIN
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    ports:
      - "8082:8082"
    depends_on:
      - coordinator
      - overlord
      - metadata-storage
      - zookeeper

  historical-1: &historical_service
    image: apache/druid:29.0.0
    container_name: druid-historical-1
    command: ["historical"]
    env_file:
      - .env
    environment: &historical_environment
      DRUID_SET_HOST: "0"
      DRUID_OVERRIDES: /opt/druid/overrides/*
      druid_host: historical-1
      PATH: "/tmp/async-profiler/bin:${PATH}"
    volumes:
      - ./druid-runtime/conf/druid:/opt/druid/conf/druid:ro
      - ./druid-runtime/logs:/opt/druid/log
      - ./druid-runtime/overrides:/opt/druid/overrides:ro
      - ./druid-override.sh:/druid.sh:ro
      - ./druid-runtime/storage:/opt/druid/var/druid
      - ./tools/async-profiler:/tmp/async-profiler:ro
    cap_add:
      - SYS_ADMIN
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    ports:
      - "8083:8083"
    depends_on:
      - coordinator
      - overlord
      - metadata-storage
      - zookeeper

  historical-2:
    <<: *historical_service
    container_name: druid-historical-2
    environment:
      <<: *historical_environment
      druid_host: historical-2
    ports:
      - "8084:8083"

  middlemanager:
    image: apache/druid:29.0.0
    container_name: druid-middlemanager
    command: ["middleManager"]
    env_file:
      - .env
    environment:
      DRUID_SET_HOST: "0"
      DRUID_OVERRIDES: /opt/druid/overrides/*
      druid_host: middlemanager
      PATH: "/tmp/async-profiler/bin:${PATH}"
    volumes:
      - ./druid-runtime/conf/druid:/opt/druid/conf/druid:ro
      - ./druid-runtime/logs:/opt/druid/log
      - ./druid-runtime/overrides:/opt/druid/overrides:ro
      - ./druid-override.sh:/druid.sh:ro
      - ./druid-runtime/storage:/opt/druid/var/druid
      - ./tools/async-profiler:/tmp/async-profiler:ro
    cap_add:
      - SYS_ADMIN
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    ports:
      - "8091:8091"
    depends_on:
      - coordinator
      - overlord
      - metadata-storage
      - zookeeper

volumes:
  metadata-data:
